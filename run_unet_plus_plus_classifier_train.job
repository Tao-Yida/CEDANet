#!/bin/bash
###############################################################################
# ----------- SLURM 指令（这里只保留必要部分，日志先丢 /dev/null） ------------
###############################################################################
#SBATCH --job-name=unet_train
#SBATCH --partition=gpu_mig
#SBATCH --gres=gpu:1
#SBATCH --time=04:00:00
#SBATCH --mem=16G
#SBATCH --cpus-per-task=4
#SBATCH --output=/dev/null          # 让 SLURM 不产生默认 .out
#SBATCH --error=/dev/null           # 让 SLURM 不产生默认 .err
###############################################################################
# ----------- 以下开始脚本正文，你只要改 MODEL 这一行 -------------------------
###############################################################################

MODEL="UNetPlusPlus_Classifier"  # 修改为支持分类器模型

# ---------- 动态生成日志文件名（模型 + 日期 + JobID） ------------------------
DATE=$(date +%F)                    # 形如 2025-05-01
JOBID=${SLURM_JOB_ID:-$$}           # $$ = 本地测试时的 shell PID
OUTDIR="out_logs"; ERRDIR="err_logs"
mkdir -p "$OUTDIR" "$ERRDIR"

OUTFILE="${OUTDIR}/${MODEL}_${DATE}_${JOBID}.out"
ERRFILE="${ERRDIR}/${MODEL}_${DATE}_${JOBID}.err"

# 把脚本剩余输出全部重定向到自定义日志
exec > >(tee -a "$OUTFILE")
exec 2> >(tee -a "$ERRFILE" >&2)

echo "Stdout redirected to: $OUTFILE"
echo "Stderr redirected to: $ERRFILE"
echo "Job   ID: $JOBID"
echo "Model  : $MODEL"
echo "Date   : $DATE"
echo "------------------------------------------------------------"

# ---------- 你的原始训练流程 --------------------------------------------------
module purge
module load 2024
source ~/anaconda3/etc/profile.d/conda.sh
echo "Loading Conda environment..."
source activate dl2024 || { echo "Failed to activate Conda env"; exit 1; }
echo "Conda environment activated."

echo "Changing to workspace directory: /home/ytao/Thesis"
cd /home/ytao/Thesis || { echo "Failed to cd"; exit 1; }

echo "Starting training with model: ${MODEL}"
python DL_models/UNetPlusPlus_Classifier_train.py

echo "Training script finished."
