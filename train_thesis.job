#!/bin/bash

# ----------- SLURM 指令（保留必要部分） ------------
#SBATCH --job-name=train_bvm_domain_adaptation
#SBATCH --partition=gpu_mig
#SBATCH --gres=gpu:1
#SBATCH --time=06:00:00
#SBATCH --mem=24G
#SBATCH --cpus-per-task=6
#SBATCH --output=logs_out/trans_bvm_thesis_train_%j.out
#SBATCH --error=logs_err/trans_bvm_thesis_train_%j.err

# ============================================================================
# BVM 域适应训练脚本参数说明
# ============================================================================

# --------------- 基础训练参数 ---------------
# --epoch:                训练轮数 (默认: 50)
# --batchsize:            每批次样本数量 (默认: 6)
# --trainsize:            输入图像分辨率 (默认: 352x352)

# --------------- 优化器参数 ---------------
# --lr_gen:               生成器学习率 (默认: 2.5e-5)
# --lr_des:               描述器学习率 (默认: 2.5e-5)
# --lr_domain:            域判别器学习率 (默认: 2.5e-5)
# --beta:                 Adam优化器beta参数 (默认: 0.5)
# --clip:                 梯度裁剪边际，防止梯度爆炸 (默认: 0.5)
# --decay_rate:           学习率衰减率 (默认: 0.9)
# --decay_epoch:          学习率衰减周期 (默认: 20)

# --------------- 模型架构参数 ---------------
# --gen_reduced_channel:  生成器中减少的通道数 (默认: 32)
# --des_reduced_channel:  描述器中减少的通道数 (默认: 64)
# --feat_channel:         重要性特征的通道数 (默认: 32)
# --latent_dim:           潜在维度 (默认: 3)
# --num_filters:          最终对比损失特定层的通道数 (默认: 16)

# --------------- 域适应特有参数 ---------------
# --domain_loss_weight:   域判别损失权重 (默认: 1.0)
#                        控制域对抗训练的强度
# --grl_lambda:           梯度反转层参数 (默认: 1.0)
#                        控制梯度反转的强度，越大对抗越强
# --domain_adapt_start_epoch: 域适应开始的轮数 (默认: 0)
#                            可以先训练几轮基础任务再开始域适应
# --domain_warmup_epochs: 域适应预热轮数 (默认: 5)
#                        逐渐增加域对抗强度的轮数

# --------------- EBM相关参数 ---------------
# --langevin_step_num_des:  EBM的langevin步骤数 (默认: 10)
# --langevin_step_size_des: EBM langevin的步长 (默认: 0.026)
# --energy_form:            能量函数的形式 (默认: identity)
#                          选项: tanh | sigmoid | identity | softplus

# --------------- 损失函数权重 ---------------
# --sm_weight:            平滑性损失的权重 (默认: 0.1)
# --reg_weight:           正则化项的权重 (默认: 1e-4)
# --lat_weight:           潜在损失的权重 (默认: 10.0)
# --vae_loss_weight:      VAE损失的权重 (默认: 0.4)
# --contrastive_loss_weight: 对比损失的权重 (默认: 0.1)

# --------------- 对比学习参数 ---------------
# --inter:                是否进行跨图像像素匹配 (默认: False)
#                        如果为True，则在不同图像之间进行匹配
#                        否则在同一图像内进行匹配
# --no_samples:           对比损失中考虑的像素数量 (默认: 50)

# --------------- 数据集路径 ---------------
# --source_dataset_path:  源域数据集路径 (通常是SMOKE5K等标注数据)
# --target_dataset_path:  目标域数据集路径 (通常是IJmond等真实场景数据)
# --pretrained_weights:   预训练权重路径 (默认: None)
#                        可以从半监督训练的模型开始
# --save_path:            模型保存路径 (默认: models/domain_adapt)

# --------------- 校验和早停参数 ---------------
# --val_split:            源域数据中用于校验的比例 (默认: 0.2)
# --patience:             早停耐心值 (默认: 15)
# --min_delta:            早停最小改善值 (默认: 0.001)
# --enable_validation:    启用校验 (默认: False)

# --------------- 数据增强和可重现性参数 ---------------
# --aug:                  启用数据增强 (默认: False)
# --freeze:               冻结所有随机性以确保完全可重现 (默认: False)
# --random_seed:          随机种子 (默认: 42)

# --------------- 域适应策略参数 ---------------
# --adaptation_method:    域适应方法 (默认: adversarial)
#                        选项: adversarial | coral | mmd
# --target_pseudo_threshold: 目标域伪标签阈值 (默认: 0.8)
#                           高置信度预测作为伪标签的阈值
# --update_pseudo_labels: 是否动态更新伪标签 (默认: True)

# ============================================================================

# 创建日志目录
mkdir -p logs_out logs_err

# 加载执行环境
module purge
module load 2024
source ~/anaconda3/etc/profile.d/conda.sh
source activate dl2024 || { echo "Failed to activate Conda env"; exit 1; }

# 执行域适应训练脚本
python ijmond-camera-ai/bvm_training/trans_bvm_self_supervised_thesis/train.py \
--epoch 5 \
--lr_gen 2.5e-5 \
--domain_loss_weight 0.1 \
--lambda_grl_max 1.0 \
--source_dataset_path "data/SMOKE5K_Dataset/SMOKE5K/train" \
--target_dataset_path "data/ijmond_camera/ijmond_900_trained/citizen_constraint" \
--save_model_path "models/thesis/trained-on-ijmond-data" \
--contrastive_loss_weight 0.1 \
--no_samples 500
