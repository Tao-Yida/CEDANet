#!/bin/bash

# ----------- SLURM 指令 ------------
#SBATCH --job-name=full_inference_
#SBATCH --partition=gpu_mig
#SBATCH --gres=gpu:1
#SBATCH --time=06:00:00
#SBATCH --mem=24G
#SBATCH --cpus-per-task=6
#SBATCH --output=logs_out/full_inference_%j.out
#SBATCH --error=logs_err/full_inference_%j.err

# ============================================================================
# 伪标签生成脚本参数说明（与 inference.py 保持同步）
# ============================================================================

# --------------- 基础参数 ---------------
# --testsize:         测试图像大小 (默认: 352)
# --latent_dim:       潜在空间维度 (默认: 3)
# --feat_channel:     特征通道数 (默认: 32)

# --------------- 路径参数 ---------------
# --videos_path:      视频文件路径 (默认: data/ijmond_camera/videos)
# --output_path:      输出路径 (默认: data/ijmond_camera)
# --pretrained_weights: 预训练权重路径 (默认: models/self-supervision/Model_50_gen.pth)

# --------------- 视频处理参数 ---------------
# --sampling_rate:    帧采样率 (默认: 1)
# --context_frames:   高置信度帧前后的上下文帧数 (默认: 2)
# --threshold:        伪标签置信度阈值 (默认: 0.5)

# --------------- 约束参数 ---------------
# --constraint_type:  约束类型 (默认: none)
#                     - none: 无约束，纯模型预测
#                     - citizen: 使用市民标签约束 (label_state列)
#                     - expert: 使用专家标签约束 (label_state_admin列)
# --video_labels_csv: 视频标签CSV文件路径 (默认: data/ijmond_camera/video_labels.csv)

# ============================================================================

# 创建日志目录
mkdir -p logs_out logs_err

# 加载执行环境
module purge
module load 2024
source ~/anaconda3/etc/profile.d/conda.sh
source activate dl2024 || { echo "Failed to activate Conda env"; exit 1; }

# 创建输出目录结构
mkdir -p data/ijmond_camera/SMOKE5K-full
mkdir -p data/ijmond_camera/ijmond_900_trained
mkdir -p data/ijmond_camera/ijmond_900_test

# ============================================================================
# 伪标签生成 - 支持多种约束类型和模型
# ============================================================================
#
# 输出目录结构：
# data/ijmond_camera/
# ├── SMOKE5K-full/               # SMOKE5K全监督模型输出
# │   ├── non_constraint/
# │   ├── citizen_constraint/
# │   └── expert_constraint/
# ├── ijmond_900_trained/         # ijmond训练集模型输出
# │   ├── non_constraint/
# │   ├── citizen_constraint/
# │   └── expert_constraint/
# └── ijmond_900_test/            # ijmond测试集模型输出
#     ├── non_constraint/
#     ├── citizen_constraint/
#     └── expert_constraint/
#
# 注意：约束类型会自动在模型输出路径下创建对应子目录
# ============================================================================

echo "开始生成伪标签..."

# ============================================================================
# 模型1: SMOKE5K全监督模型
# ============================================================================
echo "=== 开始处理 SMOKE5K 全监督模型 ==="

# 1.1 无约束生成（SMOKE5K模型）
echo "执行无约束伪标签生成（SMOKE5K模型）..."
python ijmond-camera-ai/bvm_training/trans_bvm_self_supervised_thesis/inference.py \
--videos_path "data/ijmond_camera/videos" \
--output_path "data/ijmond_camera/SMOKE5K-full" \
--pretrained_weights "models/full-supervision/SMOKE5K-supervised/SMOKE5K_Dataset_SMOKE5K_train/SMOKE5K_Dataset_SMOKE5K_train_best_model.pth" \
--context_frames 2 \
--threshold 0.7 \
--constraint_type none

# 1.2 市民标签约束生成（SMOKE5K模型）
echo "执行市民标签约束伪标签生成（SMOKE5K模型）..."
python ijmond-camera-ai/bvm_training/trans_bvm_self_supervised_thesis/inference.py \
--videos_path "data/ijmond_camera/videos" \
--output_path "data/ijmond_camera/SMOKE5K-full" \
--pretrained_weights "models/full-supervision/SMOKE5K-supervised/SMOKE5K_Dataset_SMOKE5K_train/SMOKE5K_Dataset_SMOKE5K_train_best_model.pth" \
--context_frames 2 \
--threshold 0.7 \
--constraint_type citizen \
--video_labels_csv "data/ijmond_camera/video_labels.csv"

# 1.3 专家标签约束生成（SMOKE5K模型）
echo "执行专家标签约束伪标签生成（SMOKE5K模型）..."
python ijmond-camera-ai/bvm_training/trans_bvm_self_supervised_thesis/inference.py \
--videos_path "data/ijmond_camera/videos" \
--output_path "data/ijmond_camera/SMOKE5K-full" \
--pretrained_weights "models/full-supervision/SMOKE5K-supervised/SMOKE5K_Dataset_SMOKE5K_train/SMOKE5K_Dataset_SMOKE5K_train_best_model.pth" \
--context_frames 2 \
--threshold 0.7 \
--constraint_type expert \
--video_labels_csv "data/ijmond_camera/video_labels.csv"

# ============================================================================
# 模型2: ijmond训练集模型
# ============================================================================
echo "=== 开始处理 ijmond 训练集模型 ==="

# 2.1 无约束生成（ijmond训练集模型）
echo "执行无约束伪标签生成（ijmond训练集模型）..."
python ijmond-camera-ai/bvm_training/trans_bvm_self_supervised_thesis/inference.py \
--videos_path "data/ijmond_camera/videos" \
--output_path "data/ijmond_camera/ijmond_900_trained" \
--pretrained_weights "models/full-supervision/ijmond-limited-train/ijmond_data_train/ijmond_data_train_best_model.pth" \
--context_frames 2 \
--threshold 0.7 \
--constraint_type none

# 2.2 市民标签约束生成（ijmond训练集模型）
echo "执行市民标签约束伪标签生成（ijmond训练集模型）..."
python ijmond-camera-ai/bvm_training/trans_bvm_self_supervised_thesis/inference.py \
--videos_path "data/ijmond_camera/videos" \
--output_path "data/ijmond_camera/ijmond_900_trained" \
--pretrained_weights "models/full-supervision/ijmond-limited-train/ijmond_data_train/ijmond_data_train_best_model.pth" \
--context_frames 2 \
--threshold 0.7 \
--constraint_type citizen \
--video_labels_csv "data/ijmond_camera/video_labels.csv"

# 2.3 专家标签约束生成（ijmond训练集模型）
echo "执行专家标签约束伪标签生成（ijmond训练集模型）..."
python ijmond-camera-ai/bvm_training/trans_bvm_self_supervised_thesis/inference.py \
--videos_path "data/ijmond_camera/videos" \
--output_path "data/ijmond_camera/ijmond_900_trained" \
--pretrained_weights "models/full-supervision/ijmond-limited-train/ijmond_data_train/ijmond_data_train_best_model.pth" \
--context_frames 2 \
--threshold 0.7 \
--constraint_type expert \
--video_labels_csv "data/ijmond_camera/video_labels.csv"

# ============================================================================
# 模型3: ijmond测试集模型
# ============================================================================
echo "=== 开始处理 ijmond 测试集模型 ==="

# 3.1 无约束生成（ijmond测试集模型）
echo "执行无约束伪标签生成（ijmond测试集模型）..."
python ijmond-camera-ai/bvm_training/trans_bvm_self_supervised_thesis/inference.py \
--videos_path "data/ijmond_camera/videos" \
--output_path "data/ijmond_camera/ijmond_900_test" \
--pretrained_weights "models/full-supervision/ijmond-limited-test/ijmond_data_test/ijmond_data_test_best_model.pth" \
--context_frames 2 \
--threshold 0.7 \
--constraint_type none

# 3.2 市民标签约束生成（ijmond测试集模型）
echo "执行市民标签约束伪标签生成（ijmond测试集模型）..."
python ijmond-camera-ai/bvm_training/trans_bvm_self_supervised_thesis/inference.py \
--videos_path "data/ijmond_camera/videos" \
--output_path "data/ijmond_camera/ijmond_900_test" \
--pretrained_weights "models/full-supervision/ijmond-limited-test/ijmond_data_test/ijmond_data_test_best_model.pth" \
--context_frames 2 \
--threshold 0.7 \
--constraint_type citizen \
--video_labels_csv "data/ijmond_camera/video_labels.csv"

# 3.3 专家标签约束生成（ijmond测试集模型）
echo "执行专家标签约束伪标签生成（ijmond测试集模型）..."
python ijmond-camera-ai/bvm_training/trans_bvm_self_supervised_thesis/inference.py \
--videos_path "data/ijmond_camera/videos" \
--output_path "data/ijmond_camera/ijmond_900_test" \
--pretrained_weights "models/full-supervision/ijmond-limited-test/ijmond_data_test/ijmond_data_test_best_model.pth" \
--context_frames 2 \
--threshold 0.7 \
--constraint_type expert \
--video_labels_csv "data/ijmond_camera/video_labels.csv"

echo "所有伪标签生成任务完成！"